<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Integrations on DefectDojo Documentation</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/</link><description>Recent content in Integrations on DefectDojo Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 02 Feb 2021 21:04:59 +0100</lastBuildDate><atom:link href="https://DefectDojo.github.io/django-DefectDojo/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>Defect Dojo Burp-Plugin</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/burp-plugin/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/burp-plugin/</guid><description>This is Burp Plugin to export findings directly to Defect Dojo .
Installation In order for the plugin to work , you will need to have Jython set up in Burp Suite Pro . To use this plugin before it appears in the BApp Store you will need to do the following :
Go to [Extender]{.title-ref} and select the [Extensions]{.title-ref} tab Click on [Add]{.title-ref} , select [Extension Type:]{.title-ref} to be [Python]{.</description></item><item><title>DefectDojo API Documentation</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/api-docs/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/api-docs/</guid><description>::: {.warning} ::: {.admonition-title} Warning :::
API v1 is deprecated and will be no longer maintained after 12-31-2020. API v1 will be removed on 06-30-2021. Please move to API v2 and raise issues for any unsupported operations. :::
DefectDojo's API is created using Tastypie. The documentation of each endpoint is available within each DefectDojo installation at [/api/v1/doc/]{.title-ref} and can be accessed by choosing the API Docs link on the user drop down menu in the header.</description></item><item><title>DefectDojo API v2 Documentation</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/api-v2-docs/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/api-v2-docs/</guid><description>DefectDojo's API is created using Django Rest Framework. The documentation of each endpoint is available within each DefectDojo installation at [/api/v2/doc/]{.title-ref} and can be accessed by choosing the API v2 Docs link on the user drop down menu in the header.
The documentation is generated using Django Rest Framework Swagger, and is interactive.
To interact with the documentation, a valid Authorization header value is needed. Visit the [/api/v2/key/]{.title-ref} view to generate your API Key (Token &amp;lt;api_key&amp;gt;) and copy the header value provided.</description></item><item><title>Google Sheets Sync</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/google-sheets-sync/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/google-sheets-sync/</guid><description>With the Google Sheets sync feature, DefectDojo allow the users to export all the finding details of each test into a separate Google Spreadsheet. Users can review and edit finding details via Google Spreadsheets. Also, they can add new notes to findings and edit existing notes using the Google Spreadsheet. After reviewing and updating the finding details in the Google Spreadsheet, the user can import (sync) all the changes done via the Google Spreadsheet into DefectDojo database.</description></item><item><title>Import Reports</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/import/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/import/</guid><description>DefectDojo has the ability to import reports from other security tools.
Acunetix Scanner XML format.
Anchore-Engine JSON vulnerability report generated by anchore-cli tool, using a command like anchore-cli --json image vuln &amp;lt;image:tag&amp;gt; all
Aqua JSON report format.
Anchore Grype (anchore_grype) Anchore Grype JSON report format generated with -o json option.
grype defectdojo/defectdojo-django:1.13.1 -o json &amp;gt; many_vulns.json Arachni Scanner Arachni Web Scanner (http://arachni-scanner.com/wiki)
Reports are generated with arachni_reporter tool this way:</description></item><item><title>JIRA Integration</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/jira/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/jira/</guid><description>DefectDojo's JIRA integration is bidirectional. You may push findings to JIRA and share comments. If an issue is closed in JIRA it will automatically be closed in Dojo.
NOTE: These steps will configure the necessary webhook in JIRA and add JIRA integration into DefectDojo. This isn't sufficient by itself, you will need to configure products and findings to push to JIRA. On a product's settings page you will need to define a: Project Key (and this project must exist in JIRA) JIRA Configuration (select the JIRA configuration that you create in the steps below) Component (can be left blank) Then elect (via tickbox) whether you want to 'Push all issues', 'Enable engagement epic mapping' and/or 'Push notes'.</description></item><item><title>Setting up Social Authentication via OAuth2 Providers</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/social-authentication/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/social-authentication/</guid><description>Auth0 OAuth2 Configuration In the same way as with other Identiy-Providers, it's now possible to leverage Auth0 to authenticate users on DefectDojo.
Inside your Auth0 dashboard create a new application (Applications / Create Application / Single Page Web Application). On the new application set the following fields: Name: &amp;quot;Defectdojo&amp;quot; Allowed Callback URLs: &amp;quot;https://the_hostname_you_have_dojo_deployed:your_server_port/complete/auth0/&amp;quot; Copy the following info from the application: Domain Client ID Client Secret Now, edit the dojo/settings/settings.</description></item><item><title>Slack Notifications</title><link>https://DefectDojo.github.io/django-DefectDojo/integrations/slack-notifications/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/integrations/slack-notifications/</guid><description>Scopes The following scopes have to be granted.
Token The bot token has to be chosen and put in your System Settings</description></item></channel></rss>