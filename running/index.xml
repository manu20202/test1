<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Running DefectDojo on DefectDojo Documentation</title><link>https://DefectDojo.github.io/django-DefectDojo/running/</link><description>Recent content in Running DefectDojo on DefectDojo Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 02 Feb 2021 20:41:04 +0100</lastBuildDate><atom:link href="https://DefectDojo.github.io/django-DefectDojo/running/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://DefectDojo.github.io/django-DefectDojo/running/getting-started/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/running/getting-started/</guid><description>Docker Compose Install (recommended) Go to https://github.com/DefectDojo/django-DefectDojo Select the appropriate branch you're working on Instructions in the [[DOCKER.md]{.title-ref}](https://github.com/DefectDojo/django-DefectDojo/blob/master/DOCKER.md) file at the root of the repository. Kubernetes Go to https://github.com/DefectDojo/django-DefectDojo Select the appropriate branch you're working on Instructions in the [[KUBERNETES.md]{.title-ref}](https://github.com/DefectDojo/django-DefectDojo/blob/master/KUBERNETES.md) file at the root of the repository. Setup.bash Install (no longer maintained) This installation method will is EOL and will be removed on 2020-12-31
Go to https://github.</description></item><item><title>Configuration</title><link>https://DefectDojo.github.io/django-DefectDojo/running/configuration/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/running/configuration/</guid><description>For more info on custom settings and use of custom settings during development, please see: [settings.py documentation](https://github.com/DefectDojo/django-DefectDojo/blob/master/dojo/settings/settings.py) and [extra settings](https://github.com/DefectDojo/django-DefectDojo/blob/master/docker/extra_settings/README.md)
To complete
DD_AUTHORIZED_USERS_ALLOW_CHANGE: Grants Active users (e.g regular users) the ability to perform changes for the Products they are authorized. DD_AUTHORIZED_USERS_ALLOW_DELETE: Grants Active users (e.g regular users) delete powers for the Products they are authorized. DD_SITE_URL: DD_DEBUG: DD_DJANGO_METRICS_ENABLED: DD_LOGIN_REDIRECT_URL: DD_DJANGO_ADMIN_ENABLED: DD_SESSION_COOKIE_HTTPONLY: DD_CSRF_COOKIE_HTTPONLY: DD_SECURE_SSL_REDIRECT: DD_SECURE_HSTS_INCLUDE_SUBDOMAINS: DD_SECURE_HSTS_SECONDS: DD_SESSION_COOKIE_SECURE: DD_CSRF_COOKIE_SECURE: DD_SECURE_BROWSER_XSS_FILTER: DD_SECURE_CONTENT_TYPE_NOSNIFF: DD_TIME_ZONE: DD_LANG: DD_WKHTMLTOPDF: DD_TEAM_NAME: DD_ADMINS: DD_WHITENOISE: DD_TRACK_MIGRATIONS: DD_SECURE_PROXY_SSL_HEADER: DD_TEST_RUNNER: DD_URL_PREFIX: DD_ROOT: DD_LANGUAGE_CODE: DD_SITE_ID: DD_USE_I18N: DD_USE_L10N: DD_USE_TZ: DD_MEDIA_URL: DD_MEDIA_ROOT: DDimages_URL: DDimages_ROOT: DD_CELERY_BROKER_URL: DD_CELERY_BROKER_SCHEME: DD_CELERY_BROKER_USER: DD_CELERY_BROKER_PASSWORD: DD_CELERY_BROKER_HOST: DD_CELERY_BROKER_PORT: DD_CELERY_BROKER_PATH: DD_CELERY_TASK_IGNORE_RESULT: DD_CELERY_RESULT_BACKEND: DD_CELERY_RESULT_EXPIRES: DD_CELERY_BEAT_SCHEDULE_FILENAME: DD_CELERY_TASK_SERIALIZER: DD_FORCE_LOWERCASE_TAGS: DD_FOOTER_VERSION: Optionally pass a custom version string displayed in the footer of all pages (base.</description></item><item><title>Running in Production</title><link>https://DefectDojo.github.io/django-DefectDojo/running/running-in-production/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/running/running-in-production/</guid><description>Production with docker-compose The docker-compose.yml file in this repository is fully functional to evaluate DefectDojo in your local environment.
Although Docker Compose is one of the supported installation methods to deploy a containerized DefectDojo in a production environment, the docker-compose.yml file is not intended for production use without first customizing it to your particular situation.
Database performance and backup It is recommended to use a dedicated database server and not the preconfigured MySQL database.</description></item><item><title>Upgrading</title><link>https://DefectDojo.github.io/django-DefectDojo/running/upgrading/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/running/upgrading/</guid><description>Docker-compose When you deploy a vanilla docker-compose, it will create a persistent volume for your MySQL database. As long as your volume is there, you should not lose any data.
Using docker images provided in DockerHub If you're using latest, then you need to pre pull the latest from DockerHub to update.
The generic upgrade method for docker-compose follows these steps:
Pull the latest version
docker pull defectdojo/defectdojo-django:latest docker pull defectdojo/defectdojo-nginx:latest If you would like to use something older (so not the latest version), specify the version (tag) you want to upgrade to:</description></item></channel></rss>