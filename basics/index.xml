<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basics on DefectDojo Documentation</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/</link><description>Recent content in Basics on DefectDojo Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 02 Feb 2021 20:41:04 +0100</lastBuildDate><atom:link href="https://DefectDojo.github.io/django-DefectDojo/basics/index.xml" rel="self" type="application/rss+xml"/><item><title>About DefectDojo</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/about/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/basics/about/</guid><description>DefectDojo Basics Terms There are several terms that will be helpful to understand as you work with DefectDojo
Products This is the name of any project, program, team, or company that you are currently testing.
Examples
Wordpress Internal wiki Slack Product types These can be business unit divisions, different offices or locations, or any other logical way of distinguishing &amp;quot;types&amp;quot; of products.
Examples
Internal / 3rd party Main company / Acquisition San Francisco / New York offices Engagements Engagements are moments in time when testing is taking place.</description></item><item><title>Models</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/models/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/basics/models/</guid><description>DefectDojo attempts to simplify how users interact with the system by minimizing the number of objects it defines. The definition for each as well as sample usages is below.
Product Types Product types represent the top level model, these can be business unit divisions, different offices or locations, development teams, or any other logical way of distinguishing &amp;quot;types&amp;quot; of products.
Examples: IAM Team Internal / 3rd Party Main company / Acquisition San Francisco / New York offices Products This is the name of any project, program, or product that you are currently testing.</description></item><item><title>Features</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/features/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/basics/features/</guid><description>Below are the main sections within DefectDojo. Each is designed to allow for ease of use and simple organization of Products and their Tests. The models page will help you understand the terminology we use below, so we recommend taking a look at that first.
Products The following attributes describe a Product:
Name A short name for the product, used for easy identification. This field can hold up to 300 characters.</description></item><item><title>Workflows</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/workflows/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/basics/workflows/</guid><description>=
Example 1 - Bill the security engineer Bill wants a place to keep track of what he's worked on, so that he can show his boss exactly what issues he reports, and statistics about how long it takes to close them.
When he is asked to audit an application, Bill registers a new Product in DefectDojo, and creates a new Engagement. Here he sets some basic information, like how long he expects the Engagement will take, who will be leading the testing (himself), what Product he will be working on, and what tests he will be doing.</description></item><item><title>Usage Examples</title><link>https://DefectDojo.github.io/django-DefectDojo/basics/start-using/</link><pubDate>Tue, 02 Feb 2021 20:46:28 +0100</pubDate><guid>https://DefectDojo.github.io/django-DefectDojo/basics/start-using/</guid><description>DefectDojo is designed to make tracking testing engagements simple and intuitive. The models{.interpreted-text role=&amp;ldquo;doc&amp;rdquo;} page will help you understand the terminology we use below, so we recommend taking a look at that first.
Create a new Product Type The first step to using DefectDojo is to create a Product Type. Some examples might be &amp;quot;Mobile Apps&amp;quot; or &amp;quot;New York Office.&amp;quot; The idea is to make it easy to divide your Products into logical categories, based on your organizational structure, or just to divide internal and external applications.</description></item></channel></rss>